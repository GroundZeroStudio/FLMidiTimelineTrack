using UnityEditor;
using UnityEngine;
using UnityEngine.Playables;
using UnityEngine.Timeline;

namespace Chasing.Midi.Timeline
{
    [TrackColor(121/255f, 0f, 214/255f)]
    [TrackClipType(typeof(MidiAnimationAsset))]
    [TrackBindingType(typeof(GameObject))]
    public sealed class MidiAnimationTrack : TrackAsset
    {
        public MidiAnimationMixer template = new MidiAnimationMixer();

        /// <summary>
        /// Creates a mixer used to blend playables generated by clips on the track.
        /// </summary>
        /// <param name="graph">The graph to inject playables into</param>
        /// <param name="go">The GameObject that requested the graph.</param>
        /// <param name="inputCount">The number of playables from clips that will be inputs to the returned mixer</param>
        /// <returns></returns>
        public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
        {
            return ScriptPlayable<MidiAnimationMixer>.Create(graph, template, inputCount);
        }

        /// <summary>
        /// Called by the Timeline Editor to gather properties requiring preview.
        /// </summary>
        /// <param name="director"></param>
        /// <param name="driver"></param>
        public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
        {
            if (template.controls == null)
                return;

            foreach (MidiControl control in template.controls)
            {
                if (!control.enabled)
                    continue;

                
            }
        }

    }
}
